A RESTful API (Representational State Transfer) involves:

1. Design: Networked applications using stateless architecture.
2. HTTP Requests: Utilizes standard methods to perform operations.
3. CRUD Operations: Create, Read, Update, Delete on resources.

Common HTTP Methods used in RESTful APIs are:

1. GET: Retrieve data from a server.
2. POST: Submit data for processing.
3. PUT: Update a resource with new data.
4. DELETE: Remove a resource.
5. PATCH: Apply partial updates to a resource.

The importance of RESTful APIs includes:

1. Scalability: Stateless nature allows for easier scaling of applications.
2. Flexibility: Can handle different types of calls, return various data formats, and structure resources for a wide range of purposes.
3. Simplicity: Uses standard HTTP methods, making it easy to understand and implement.
4. Interoperability: Allows different systems to communicate effectively using HTTP.
5. Performance: Efficiently handles requests and responses, leading to faster performance.
6. Maintainability: Clear separation between client and server enhances maintainability and the ability to update components independently.
7. Reusability: Resources and services can be reused across different applications and platforms.
8. Security: HTTP protocols support secure transmission of data through SSL/TLS.